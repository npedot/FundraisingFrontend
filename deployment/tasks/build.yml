# This file is meant to be included from the deployment.yml playbook
# It will create an archive of the source code and all its PHP and JavaScript dependencies
#
# The variable "build_dir" contains the inventory-specific path where all the code is checked out and assembled.
# That path could be deleted between deployments, but for performance reasons the code should stay in place.
# "build_dir" is passed in from deployment.yml
#
# All other variables come from the inventory file.

- name: Checkout code
  git: repo=https://github.com/wmde/FundraisingFrontend.git dest={{ build_dir }} version={{ build_branch }} force=yes

- name: Install PHP dependencies
  docker_container:
    name: composer
    image: composer
    detach: no
    cleanup: yes
    user: "{{ ansible_user_uid }}:{{ ansible_user_gid }}"
    command: install --no-dev --ignore-platform-reqs --prefer-dist --optimize-autoloader
    volumes:
      - "{{ ansible_user_dir }}/.composer:/tmp"
      - "{{ build_dir }}:/app"

- name: Compile the assets inside a Docker image
  docker_image:
    name: fundraising_frontend_node_build
    dockerfile: "{{ build_dir }}/deployment/build-frontend-assets/Dockerfile"
    path: "{{ build_dir }}"
    buildargs:
      ASSET_USER: "{{ ansible_user_uid }}"
      ASSET_GROUP: "{{ ansible_user_gid }}"

- name: Copy compiled Javascript to web folder
  docker_container:
    name: npm_build
    image: fundraising_frontend_node_build
    detach: no
    working_dir: /app
    user: "{{ ansible_user_uid }}:{{ ansible_user_gid }}"
    command: "npm run copy-assets"
    env:
      NO_UPDATE_NOTIFIER: 1
    volumes:
      - "{{ build_dir }}/web:/app/web"

- name: Create tarball
  shell: tar -czf {{ build_dir }}.tar.gz --exclude=".git" --exclude=node_modules -C {{ build_dir }} . warn=no
